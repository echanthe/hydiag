% Fonction that open a popup to select next id for each event, for the mode
% given as parameter
    %returns 'obj_frame' AND 'popup_f' (to be able to delete figure in the Callback;
    %we will get the data when clicking on Validate that
    %call Callback in GUI_right_frame, and that has access to obj_frame.
    
function GUI_ask_next_id(mode_n)
    global conf
    'popup ask next id'
    
    %create a new figure (with height fonction of events_size)
    popup_f = figure( 'Visible','off','NumberTitle','off',...
                      'Position',[1 1 conf.X_POPUP_SIZE conf.Y_POPUP_SIZE], ...
                      'Resize','off','Color',conf.BG_COLOR, ...
                      'Name','Select next mode on event reception ...');
    % Header
    uicontrol( 'Parent', popup_f, 'Style','text', ...
               'Position', [...
                        conf.MARGIN,...
                        conf.Y_POPUP_SIZE-conf.MARGIN-2.5*conf.Y_BTN_SIZE,...
                        conf.X_POPUP_SIZE-2*conf.MARGIN,...
                        2.5*conf.Y_BTN_SIZE ], ...
               'BackgroundColor',conf.BG_COLOR_BIS, ...
               'ForegroundColor',conf.FG_COLOR_BIS, ...
               'String',{'For each event, pick the mode that should follow when the system receives it.'...
                        ['This is for mode n°' num2str(mode_n) ': ' SysHybride('get_description', mode_n) '.']});

    movegui(popup_f,'center')
    
    %create a label + popupmenu to select next mode for each event that may
    %append (TODO: resize the window consequently
    offset = 4;
    %initialize current values 
    next_id = SysHybride('get_next_id', mode_n);
     
     % preparing the mode list
    buff = {};
    buff{1} = 'Cannot occurs in this mode';

    for i=1:SysHybride('get_automate_size')
        % WARNING, indice is increased of 1.
        buff{i+1}=[SysHybride('get_description', i) ' (', num2str(i), ')'];
    end
    
    for i=1:SysHybride('get_events_size')
            %  (label)
             obj_frame{i} = uicontrol(...
                'Parent', popup_f, ...
                'Style','text', ...
                'BackgroundColor',conf.BG_COLOR_LABEL, ...
                'ForegroundColor',conf.FG_COLOR_LABEL, ...                
                'String', ['On event n°' num2str(i) ': ' SysHybride('get_event_name', i)], ...
                'Position',[...
                     conf.MARGIN, ...
                     (conf.Y_POPUP_SIZE - 2*conf.Y_BTN_SIZE) - (offset+i)*(conf.Y_BTN_SIZE + conf.MARGIN) , ...
                     conf.X_POPUP_SIZE - 2.5*conf.X_BTN_SIZE-conf.MARGIN, ...
                     conf.Y_BTN_SIZE] ...
                     );
             %  (popupmenu)
             obj_frame_{i} = uicontrol(...
                'Parent', popup_f, ...
                'Style','popupmenu',...
                'String', buff, ...
                'Value', next_id(i)+1, ...
                'BackgroundColor',conf.BG_COLOR_INPUT, ...
                'ForegroundColor',conf.FG_COLOR_INPUT, ...                
                'Position',[...
                     conf.X_POPUP_SIZE - 2.5*conf.X_BTN_SIZE, ...
                     (conf.Y_POPUP_SIZE - 2*conf.Y_BTN_SIZE) - (offset+i)*(conf.Y_BTN_SIZE + conf.MARGIN), ...
                     2*conf.X_BTN_SIZE, ...
                     conf.Y_BTN_SIZE] ...
                     );
    end
    
    
    %Validate button
    uicontrol(...
            'Parent', popup_f, 'Style','pushbutton','String','Validate',...
            'Position',[...
                 conf.X_POPUP_SIZE - 2*conf.X_BTN_SIZE, ...
                 conf.MARGIN+conf.Y_BTN_SIZE, ...
                 conf.X_BTN_SIZE, ...
                 conf.Y_BTN_SIZE], ...
            'Callback',{@btn_asknextidvalidate_Callback,obj_frame, obj_frame_, mode_n,popup_f}); % not sure args can be passed
                
    % Once everything as been setup, we can display the window
    set(popup_f,'Visible','on');
    uiwait(popup_f)
    'click'
    % save data
    next_id = [];
    for i=1:SysHybride('get_events_size')
        %we need to remove 1 from the value read
        next_id = [ next_id get(obj_frame_{i}, 'Value')-1];
    end
    
    SysHybride('set_next_id', mode_n, next_id);
    
    % refresh frame
    GUI_right_frame('edit_modes', mode_n);
    
    % close popup
    delete(popup_f)
    clear popup_f
 
    function btn_asknextidvalidate_Callback(source, eventdata, obj_frame, obj_frame_, mode_n, popup_f)
                'Confirm'
                uiresume(popup_f);